version: '3.2'

networks:
  pwg:
    external: false

volumes:
  sessions:
  networks:
  gitea:
    driver: local

services:
  controller:
    build:
      context: .
      dockerfile: ./docker/controller/Dockerfile
    ports:
      - "8081:8080"
    networks:
      - pwg
    volumes:
      - .:/start:ro
    command: ["-guideconfig=guides/gen_guide_structures.cue", "-prestepconfig=prestep_conf.cue", "-unsafe", "-origin=http://localhost:4000"]
    working_dir: "/start"

  haproxy:
    container_name: haproxy
    image: haproxy:2.2.3
    networks:
      - pwg
    ports:
        - "80:8080"
    volumes:
        - ./docker/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg

  cmd_gitea:
    build:
      context: .
      dockerfile: ./docker/cmd_gitea/Dockerfile
    networks:
      - pwg
    environment:
      - PLAYWITHGODEV_CONTRIBUTOR_USER
      - PLAYWITHGODEV_CONTRIBUTOR_PASSWORD
    command: ["/runbin/gitea", "serve"]

  pwd:
    build:
      context: .
      dockerfile: ./docker/pwd/Dockerfile
    networks:
      - pwg
    environment:
      - PWD_UNSAFE=true
    command: ["-save", "/pwd/sessions", "-name", "l2"]
    volumes:
      - sessions:/pwd
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /start
    container_name: pwd

  l2:
    build:
      context: .
      dockerfile: ./docker/l2/Dockerfile
    networks:
      - pwg
    command: ["-ssh_key_path", "/etc/ssh/ssh_host_rsa_key", "-save", "/pwd/networks", "-name", "l2"]
    volumes:
      - networks:/pwd
      - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /start
    container_name: l2

  site:
    build:
      context: .
      dockerfile: ./docker/site/Dockerfile
    volumes:
      - ./:/srv/jekyll
    ports:
      - 4000:4000
    command: ["jekyll", "serve"]

